# Generated by Django 4.1.3 on 2023-03-13 17:06

import logging

from django.db import migrations


def get_console_logger():
    logger = logging.getLogger(__name__)
    logger.setLevel(logging.INFO)
    logger.info("starting logger")
    return logger


def update_reviews_forward(apps, schema_editor):
    review_cls = apps.get_model("reviews", "LevelReview")
    level_cls = apps.get_model("levels", "Level")

    logger = get_console_logger()

    for level in (
        level_cls.objects.order_by("id")
        .exclude(reviews=None)
        .distinct()
        .iterator()
    ):
        logger.info("updating level %d", level.pk)

        reviews = [*review_cls.objects.filter(level=level).order_by("created")]
        for position, review in enumerate(reviews, 1):
            review.position = position

        review_cls.objects.bulk_update(reviews, ["position"])


class Migration(migrations.Migration):
    dependencies = [
        ("reviews", "0003_levelreview_position"),
    ]

    operations = [
        migrations.RunPython(
            update_reviews_forward, migrations.RunPython.noop
        ),
    ]
